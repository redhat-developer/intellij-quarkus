# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew build
    - uses: actions/upload-artifact@v1
      with:
        name: ${{ runner.os }}-test-reports
        path: build/reports
      if: always()
    - name: Run integration tests
      run: |
        dir=~/.java/.userPrefs/jetbrains/_\!\(\!\!cg\"p\!\(\}\!\}@\"j\!\(k\!\|w\"w\!\'8\!b\!\"p\!\':\!e@=\=
        mkdir -p "$dir"
        cp .github/workflows/prefs.xml $dir
        mkdir -p ~/.local/share/JetBrains/consentOptions
        cp .github/workflows/accepted ~/.local/share/JetBrains/consentOptions
        export DISPLAY=:99.0
        Xvfb -ac :99 -screen 0 1920x1080x16 &
        ./gradlew runIdeForUiTests -PideaVersion=IC-2020.2 &
        ./gradlew integrationTest
    - uses: actions/upload-artifact@v1
      with:
        name: ${{ runner.os }}-integration-test-reports
        path: build/reports/tests/integrationTest
      if: always()
    - name: Archiving screenshots
      uses: actions/upload-artifact@v2
      with: 
        name: ${{ runner.os }}-screenshots
        path: |
          build/screenshots/*

  build-macos:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew build
    - uses: actions/upload-artifact@v1
      with:
        name: ${{ runner.os }}-test-reports
        path: build/reports
      if: success() || failure()

  build-windows:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew build
    - uses: actions/upload-artifact@v1
      with:
        name: ${{ runner.os }}-test-reports
        path: build/reports
      if: success() || failure()
    - name: Run integration tests
      run: |
        $dir = "$env:USERPROFILE\AppData\Roaming\JetBrains\consentOptions"
        mkdir -Path $dir
        cp -Path .github/workflows/accepted -Destination $dir
        $registryPath = "HKCU:\Software\JavaSoft\Prefs\jetbrains\privacy_policy"
        New-Item -Path $registryPath -Force
        New-ItemProperty -Path $registryPath -Name accepted_version -Value "2.1"
        Start-Process .\gradlew.bat -ArgumentList "runIdeForUiTests -PideaVersion=IC-2020.2" -WindowStyle hidden
        .\gradlew.bat integrationTest
      shell: powershell
    - uses: actions/upload-artifact@v1
      with:
        name: ${{ runner.os }}-integration-test-reports
        path: build/reports/tests/integrationTest
      if: always()
    - name: Archiving screenshots
      uses: actions/upload-artifact@v2
      with: 
        name: ${{ runner.os }}-screenshots
        path: |
          build/screenshots/*