<idea-plugin>
  <id>com.redhat.devtools.intellij.quarkus</id>
  <name>Quarkus Tools</name>
  <version>1.0</version>
  <vendor email="developers@redhat.com" url="https://github.com/redhat-developer/intellij-quarkus/issues">Red-Hat</vendor>

  <change-notes><![CDATA[
    <h3>1.30.0</h3>
    <ul>
      <li>Create "Quarkus Dev Mode" run configuration on project import</li>
      <li>"Quarkus Dev Mode" run configuration integration in standard "Services" view</li>
      <li>More bug fixes</li>
    </ul>
    Learn more in the <a href="https://github.com/redhat-developer/intellij-quarkus/milestone/43?closed=1">changelog</a>.
    <h3>1.29.0</h3>
    <ul>
      <li>Language servers no longer affect non-Quarkus projects</li>
      <li>Quarkus properties completion no longer shows in properties files other than application.properties and microprofile-config.properties
      <li>10-20X faster computation of properties from deployment jars</li>
      <li>@Observes and @Scheduled methods implicitly used</li>
      <li>fixed compatibility issues with 2023.3 EAP</li>
      <li>More performance improvements</li>
      <li>More bug fixes</li>
    </ul>
    Learn more in the <a href="https://github.com/redhat-developer/intellij-quarkus/milestone/42?closed=1">changelog</a>.
    <h3>1.28.0</h3>
    <ul>
      <li>Added quick fixes to disable validation for Qute templates</li>
      <li>Added improvements to GraphQL validation</li>
      <li>Bug fixes</li>
    </ul>
    Learn more in the <a href="https://github.com/redhat-developer/intellij-quarkus/milestone/41?closed=1">changelog</a>.
    <h3>1.27.0</h3>
    <ul>
      <li>Added quick fixes to disable validation for unknown or unassigned MicroProfile/Quarkus properties</li>
      <li>Renamed <i>Quarkus</i> run configurations to <i>Quarkus Dev Mode</i> to minimize confusion with IDEA Ultimate's built-in Quarkus support</li>
      <li>Added partial support for Qute type-safe message bundles (messages from .java classes only)</li>
      <li>Added code lens support for Quarkus reactive routes</li>
      <li>Marked @Observer methods as implicitly used</li>
      <li>Bug fixes</li>
    </ul>
    Learn more in the <a href="https://github.com/redhat-developer/intellij-quarkus/milestone/40?closed=1">changelog</a>.
    <h3>1.26.0</h3>
    <ul>
      <li>Added Microprofile inspections preferences</li>
      <li>Added Qute inspections preferences</li>
      <li>Show completion items' documentation</li>
      <li>Bug fixes</li>
    </ul>
    Learn more in the <a href="https://github.com/redhat-developer/intellij-quarkus/milestone/39?closed=1">changelog</a>.
    <h3>1.25.0</h3>
    <ul>
      <li>Added LSP cancellation support</li>
      <li>LSP settings are now scoped at the project level</li>
      <li>More performance improvements</li>
      <li>Bug fixes</li>
    </ul>
    Learn more in the <a href="https://github.com/redhat-developer/intellij-quarkus/milestone/38?closed=1">changelog</a>.
    <h3>1.24.0</h3>
    <ul>
      <li>Fixed many cases when the Language Servers would freeze IDEA</li>
      <li>Several performance improvements</li>
      <li>Uses LSP4MP 0.9.0 and Quarkus LS 0.16.0</li>
      <li>Now requires IDEA 2022.2 minimum</li>
      <li>Bug fixes</li>
    </ul>
    Learn more in the <a href="https://github.com/redhat-developer/intellij-quarkus/milestone/37?closed=1">changelog</a>.
    <h3>1.23.0</h3>
    <ul>
      <li>Fix completion apply to update correctly the text to replace and move the caret on the proper position</li>
      <li>Completion snippets apply are reindented following the IDE indentation setting</li>
      <li>Completion is now available during indexing</li>
      <li>Support for Java class in the Qute template parameter declaration</li>
    </ul>
    Learn more in the <a href="https://github.com/redhat-developer/intellij-quarkus/milestone/36?closed=1">changelog</a>.
    <h3>1.22.0</h3>
    <ul>
      <li>Improved Qute template editing experience (brackets autoclose, syntax highlighting, better HTML integration ...)</li>
      <li>New completion icons</li>
      <li>New and improved Snippet completion</li>
      <li>New validations for Microprofile @Query and @Mutation</li>
      <li>Show JAX-RS and Renarde endpoints as implicitly used</li>
      <li>Improved extension selection in Quarkus project wizard</li>
      <li>Bug fixes</li>
    </ul>
    Learn more in the <a href="https://github.com/redhat-developer/intellij-quarkus/milestone/35?closed=1">changelog</a>.
    <h3>1.21.0</h3>
    <ul>
      <li>performance improvement by debouncing classpath changes to refresh Java / properties files validation</li>
      <li>LSP textDocument/documentLink support (ex: hyperlink in #insert Qute section)</li>
      <li>Show property expression value in application.properties as inlay hint</li>
      <li>Bug fixes</li>
    </ul>
    Learn more in the <a href="https://github.com/redhat-developer/intellij-quarkus/milestone/34?closed=1">changelog</a>.
    <h3>1.20.1</h3>
    <ul>
      <li>Bug fixes</li>
    </ul>
    Learn more in the <a href="https://github.com/redhat-developer/intellij-quarkus/milestone/33?closed=1">changelog</a>.
    <h3>1.20.0</h3>
    <ul>
      <li>Support for Renarde Quarkus application (URL codelens in Java file, uri/uriabs support in Qute template)</li>
      <li>Support for Qute fragments</li>
      <li>Support Quarkus3 for Qute</li>
      <li>Bug fixes</li>
    </ul>
    Learn more in the <a href="https://github.com/redhat-developer/intellij-quarkus/milestone/32?closed=1">changelog</a>.
    <br><br>
    <h3>1.19.0</h3>
    <ul>
      <li>performance improvement which should avoid freezing IJ by improving start/stop of language servers</li>
      <li>LSP console to track LSP request/responses notification for all started language servers</li>
      <li>Support for WSL2</li>
      <li>Bug fixes</li>
    </ul>
    Learn more in the <a href="https://github.com/redhat-developer/intellij-quarkus/milestone/30?closed=1">changelog</a>.
    <br><br>
    <h3>1.18.0</h3>
    <ul>
      <li>Support for Jakarta annotations</li>
      <li>validation and quickfixes are now much faster and are not blocking the editor any longer</li>
      <li>Bug fixes</li>
    </ul>
    Learn more in the <a href="https://github.com/redhat-developer/intellij-quarkus/milestone/29?closed=1">changelog</a>.
    <br><br>
    <h3>1.17.1</h3>
    <ul>
      <li>Bug fixes</li>
    </ul>
    <br><br>
    <h3>1.17.0</h3>
    <ul>
      <li>Release for 2023.1</li>
      <li>Bug fixes</li>
    </ul>
    <br><br>
    <h3>1.16.0</h3>
    <ul>
      <li>LSP4MP 0.6.0 and quarkus-ls 0.13.0 based</li>
      <li>Bug fixes</li>
    </ul>
    <br><br>
    <h3>1.15.0</h3>
    <ul>
      <li>Emergency release for 2022.3 as it breaks Quarkus Tools and numerous other plugins</li>
      <li>Bug fixes</li>
    </ul>
    <br><br>
    <h3>1.14.1</h3>
    <ul>
      <li>Bug fixes</li>
    </ul>
    <br><br>
    <h3>1.14.0</h3>
    <ul>
      <li>Add support for CodeActions / QuickFixes</li>
      <li>Bug fixes</li>
    </ul>
    <br><br>
    <h3>1.13.1</h3>
    <ul>
      <li>Some Maven projects could not be loaded because of conflicting dependencies</li>
      <li>Bug fixes</li>
    </ul>
    <br><br>
    <h3>1.13.0</h3>
    <ul>
      <li>Add support for InlayHint including clickable hints</li>
      <li>Add support for documentHighlight</li>
      <li>Security fixes</li>
      <li>Bug fixes</li>
    </ul>
    <br><br>
    <h3>1.12.0</h3>
    <ul>
      <li>New Quarkus project wizard allows to filter extensions by name and by being part of the Quarkus platform</li>
      <li>Improved CodeLens support</li>
      <li>Open Quarkus DevUI and application from Quarkus run or debug configuration console</li>
      <li>LSP4MP 0.5.0 and quarkus-ls 0.12.1 based</li>
      <li>Bug fixes</li>
    </ul>
    <br><br>
    <h3>1.11.1</h3>
    <ul>
      <li>Fix incompatibilty with JetBrains Quarkus plugin</li>
      <li>Security fixes</li>
      <li>Bug fixes</li>
    </ul>
    <br><br>
    <h3>1.11.0</h3>
    <ul>
      <li>Add support for Qute templating engine</li>
      <li>MicroProfile 2.0 support</li>
      <li>IntelliJ 2022.1 compatibility</li>
    </ul>
    <br><br>
    <h3>1.10.0</h3>
    <ul>
      <li>Add Quarkus configuration support to run and debug Quarkus applications</li>
      <li>Fix Quarkus library dependencies
      <li>Fix CVE-2021-25738 (Yaml parsing)</li>
    </ul>
    <br><br>
    <h3>1.9.0</h3>
    <ul>
      <li>Quarkus wizard allows to select Quarkus stream</li>
      <li>Fix compatibility issue with IntelliJ 2021.3</li>
    </ul>
    <br><br>
    <h3>1.8.0</h3>
    <ul>
      <li>Add support for CodeLens/Inlay (for JAX-RS endpoints)</li>
      <li>Configuration files with profile scope get content assist and syntax validation</li>
    </ul>
    <br><br>
    <h3>1.7.0</h3>
    <ul>
      <li>Add support for projects with Gradle DSL</li>
      <li>Configuration files with profile scope get content assist and syntax validation</li>
    </ul>
    <br><br>
    <h3>1.6.0</h3>
    <ul>
      <li>Quarkus 2.x</li>
      <li>Fix compatibility issues with IntelliJ 2021.2</li>
    </ul>
    <br><br>
    <h3>1.5.0</h3>
    <ul>
      <li>Quarkus project wizard now uses POST requests</li>
      <li>Opt-in telemetry</li>
      <li>Bug fixes</li>
    </ul>
    <br><br>
    <h3>1.4.0</h3>
    <ul>
      <li>Quarkus project wizard now displays codestarts enabled extensions with an icon</li>
      <li>Bug fixes</li>
    </ul>
    <br><br>
    <h3>1.3.0</h3>
    <ul>
      <li>Quarkus project wizard now offers codestarts options</li>
      <li>Bug fixes</li>
    </ul>
    <br><br>
    <h3>1.2.0</h3>
    <ul>
      <li>LSP4MP 1.0 based</li>
      <li>Better Eclipse Microprofile support: JWT, Health, GraphQL and Reactive Messagging
      properties added</li>
    </ul>
    <br><br>
    <h3>1.1.0</h3>
    <ul>
      <li>Support YAML configuration files (code assist, syntax validation)</li>
    </ul>
    <br><br>
    <h3>1.0.4</h3>
    <ul>
      <li>Fix whole IDE deadlock while completion proposals were computed</li>
    </ul>
    <br><br>
    <h3>1.0.3</h3>
    <ul>
      <li>Fix whole IDE deadlock while completion proposals were computed</li>
      <li>Various bug fixes</li>
    </ul>
    <br><br>
    <h3>1.0.2</h3>
    <ul>
      <li>Extension details and link to guide are now available in the Quarkus wizard</li>
      <li>Java code assist was polluted by snippets (see <a href="https://github.com/redhat-developer/intellij-quarkus/issues/152">#152</a>)</li>
      <li>Various bug fixes</li>
    </ul>
    <br><br>
    <h3>1.0.1</h3>
    <ul>
      <li>Java quickdoc was not displayed anymore if Quarkus Tools is installed</li>
    </ul>
    <br><br>
    <h3>1.0.0</h3>
    <ul>
      <li>Based on microprofile-ls</li>
      <li>Removed dependency on LSP Support plugin</li>
      <li>Added Goto property definition</li>
      <li>MicroProfile Health support: validation of Java source</li>
      <li>MicroProfile Fault Tolerance support: new property keys if Microprofile Fault Tolerance used in Java sources</li>
      <li>MicroProfile Rest Client support: proper injection points are checked</li>
      <li>MicroProfile LRA support: new property keys if Microprofile LRA dependency is present</li>
      <li>MicroProfile OpenAPI support: new property keys if Microprofile OpenAPI dependency is present</li>
      <li>MicroProfile Metrics support: new property keys if Microprofile Metrics dependency is present</li>
      <li>MicroProfile OpenTracing support: new property keys if Microprofile OpenTracing dependency is present</li>
      <li>The Quarkus project/module wizard has been enhanced</li>
    </ul>
    <br><br>
    <h3>0.0.3</h3>
    <ul>
      <li>Fix issue in newly created Maven projects causing incomplete completion in application.properties</li>
    </ul>
    <br><br>
    <h3>0.0.2</h3>
    <ul>
      <li>Add support for Gradle projects</li>
      <li>Fix issue in wizard causing incorrect version</li>
      <li>Plugin renamed to Quarkus Tools</li>
    </ul>
    <br><br>
    <h3>0.0.1</h3>
    <p>Initial release</p>
    <ul>
      <li>Project and module wizard through code.quarkus.io</li>
      <li>application.properties code assist through the quarkus-ls LSP language server</li>
    </ul>
  ]]>
  </change-notes>

  <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/build_number_ranges.html for description -->
  <idea-version since-build="223"/>

  <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
       on how to target different products -->
  <depends>com.intellij.modules.lang</depends>
  <depends>com.intellij.modules.java</depends>
  <depends>com.intellij.properties</depends>
  <depends>com.redhat.devtools.lsp4ij</depends>
  <depends>com.redhat.devtools.intellij.telemetry</depends>
  <depends optional="true" config-file="plugin-maven.xml">org.jetbrains.idea.maven</depends>
  <depends optional="true" config-file="plugin-gradle.xml">org.jetbrains.plugins.gradle</depends>
  <depends optional="true" config-file="plugin-json.xml">com.intellij.modules.json</depends>

  <extensions defaultExtensionNs="com.intellij">
    <postStartupActivity implementation="com.redhat.devtools.intellij.quarkus.QuarkusPostStartupActivity"/>
    <!-- Add your extensions here -->
    <facetType implementation="com.redhat.devtools.intellij.quarkus.facet.QuarkusFacetType"/>
    <framework.detector implementation="com.redhat.devtools.intellij.quarkus.facet.QuarkusFrameworkDetector"/>
    <moduleBuilder builderClass="com.redhat.devtools.intellij.quarkus.projectWizard.QuarkusModuleBuilder"/>
    <iconProvider implementation="com.redhat.devtools.intellij.quarkus.lang.QuarkusIconProvider"/>
    <completion.contributor
            language="Properties"
            order="before javaClassReference"
            implementationClass="com.redhat.devtools.intellij.quarkus.lang.QuarkusPropertyClassNameCompletionRemover"/>

    <properties.implicitPropertyUsageProvider implementation="com.redhat.devtools.intellij.quarkus.lang.QuarkusImplicitPropertyUsageProvider"/>
    <projectService serviceImplementation="com.redhat.devtools.intellij.quarkus.QuarkusProjectService"/>
    <projectService serviceImplementation="com.redhat.devtools.intellij.lsp4mp4ij.classpath.ClasspathResourceChangedManager"/>
    <projectService serviceImplementation="com.redhat.devtools.intellij.lsp4mp4ij.psi.core.project.PsiMicroProfileProjectManager"/>
    <projectService serviceImplementation="com.redhat.devtools.intellij.quarkus.QuarkusDeploymentSupport"/>

    <!--Quarkus run config -->
    <projectService serviceImplementation="com.redhat.devtools.intellij.quarkus.run.QuarkusRunConfigurationManager" />
    <configurationType implementation="com.redhat.devtools.intellij.quarkus.run.QuarkusRunConfigurationType"/>
    <consoleActionsPostProcessor implementation="com.redhat.devtools.intellij.quarkus.run.QuarkusRunConsolePostProcessor"/>
    <runDashboardCustomizer implementation="com.redhat.devtools.intellij.quarkus.run.dashboard.QuarkusRunDashboardCustomizer"/>

    <!-- Qute -->
    <facetType implementation="com.redhat.devtools.intellij.qute.facet.QuteFacetType"/>
    <framework.detector implementation="com.redhat.devtools.intellij.qute.facet.QuteFrameworkDetector"/>
    <fileType name="Qute_"
              language="Qute_"
              instance="QUTE"
              extensions="qute.html;qute.htm;qute.json;qute.txt;qute.yaml;qute.yml"
              implementationClass="com.redhat.devtools.intellij.qute.lang.QuteFileType"/>
    <lang.fileViewProviderFactory language="Qute_"
                                  implementationClass="com.redhat.devtools.intellij.qute.lang.QuteFileViewProviderFactory"/>
    <lang.formatter language="Qute_"
                    implementationClass="com.redhat.devtools.intellij.qute.lang.format.QuteHtmlFormattingModelBuilder"/>
    <braceMatcher filetype="Qute_" implementationClass="com.redhat.devtools.intellij.qute.editor.QuteBraceMatcher"/>
    <lang.parserDefinition language="Qute_" implementationClass="com.redhat.devtools.intellij.qute.lang.QuteParserDefinition"/>
    <!-- Disabled as it causes https://github.com/redhat-developer/intellij-quarkus/issues/944
    <pom.declarationSearcher implementation="com.redhat.devtools.intellij.qute.lang.QuteDeclarationSearcher"/>
    -->
    <fileIndentOptionsProvider implementation="com.redhat.devtools.intellij.qute.lang.format.QuteFileIndentOptionsProvider"/>
    <editorHighlighterProvider filetype="Qute_"
                               implementationClass="com.redhat.devtools.intellij.qute.lang.highlighter.QuteEditorHighlighterProvider" />
    <colorSettingsPage implementation="com.redhat.devtools.intellij.qute.lang.highlighter.QuteColorsPage"/>
    <lang.ast.factory language="Qute_" implementationClass="com.redhat.devtools.intellij.qute.lang.QuteASTFactory"/>
    <lang.substitutor language="HTML" implementationClass="com.redhat.devtools.intellij.qute.lang.QuteLanguageSubstitutor"/>
    <lang.substitutor language="TEXT" implementationClass="com.redhat.devtools.intellij.qute.lang.QuteLanguageSubstitutor"/>
    <lang.substitutor language="JSON" implementationClass="com.redhat.devtools.intellij.qute.lang.QuteLanguageSubstitutor"/>
    <lang.substitutor language="yaml" implementationClass="com.redhat.devtools.intellij.qute.lang.QuteLanguageSubstitutor"/>
    <typedHandler implementation="com.redhat.devtools.intellij.qute.editor.QuteTypedHandler"/>
  </extensions>

  <extensionPoints>
    <extensionPoint name="toolDelegate" interface="com.redhat.devtools.intellij.quarkus.buildtool.BuildToolDelegate"/>
    <extensionPoint name="propertiesProvider" interface="com.redhat.devtools.intellij.lsp4mp4ij.psi.core.IPropertiesProvider"/>
    <extensionPoint name="staticPropertyProvider" beanClass="com.redhat.devtools.intellij.lsp4mp4ij.psi.internal.core.StaticPropertyProviderExtensionPointBean"/>
    <extensionPoint name="javaHoverParticipant" interface="com.redhat.devtools.intellij.lsp4mp4ij.psi.core.java.hover.IJavaHoverParticipant"/>
    <extensionPoint name="javaDiagnosticsParticipant" interface="com.redhat.devtools.intellij.lsp4mp4ij.psi.core.java.diagnostics.IJavaDiagnosticsParticipant"/>
    <extensionPoint name="projectLabelProvider" interface="com.redhat.devtools.intellij.lsp4mp4ij.psi.core.IProjectLabelProvider"/>
    <extensionPoint name="javaDefinitionParticipant" interface="com.redhat.devtools.intellij.lsp4mp4ij.psi.core.java.definition.IJavaDefinitionParticipant"/>
    <extensionPoint name="javaCompletionParticipant" interface="com.redhat.devtools.intellij.lsp4mp4ij.psi.core.java.completion.IJavaCompletionParticipant"/>
    <extensionPoint name="javaCodeLensParticipant" interface="com.redhat.devtools.intellij.lsp4mp4ij.psi.core.java.codelens.IJavaCodeLensParticipant"/>
    <extensionPoint name="configSourceProvider" interface="com.redhat.devtools.intellij.lsp4mp4ij.psi.core.project.IConfigSourceProvider"/>
    <extensionPoint name="javaASTValidator.validator" beanClass="com.redhat.devtools.intellij.lsp4mp4ij.psi.core.java.validators.JavaASTValidatorExtensionPointBean">
      <with attribute="implementation" implements="com.redhat.devtools.intellij.lsp4mp4ij.psi.core.java.validators.JavaASTValidator"/>
    </extensionPoint>
    <extensionPoint name="javaASTValidator.annotationValidator" beanClass="com.redhat.devtools.intellij.lsp4mp4ij.psi.core.java.validators.annotations.AnnotationRuleExtensionPointBean"/>
    <extensionPoint name="javaCodeActionParticipant" beanClass="com.redhat.devtools.intellij.lsp4mp4ij.psi.internal.core.java.codeaction.JavaCodeActionDefinition">
      <with attribute="implementationClass" implements="com.redhat.devtools.intellij.lsp4mp4ij.psi.core.java.codeaction.IJavaCodeActionParticipant"/>
    </extensionPoint>
    <extensionPoint name="jaxRsInfoProvider" interface="com.redhat.devtools.intellij.lsp4mp4ij.psi.core.jaxrs.IJaxRsInfoProvider"/>

    <!-- Qute -->
    <extensionPoint name="qute.dataModelProvider" beanClass="com.redhat.devtools.intellij.qute.psi.internal.template.datamodel.DataModelProviderRegistry$DataModelProviderBean">
      <with attribute="implementationClass" implements="com.redhat.devtools.intellij.qute.psi.template.datamodel.IDataModelProvider"/>
    </extensionPoint>
    <extensionPoint name="qute.resolvedJavaTypeFactories" beanClass="com.redhat.devtools.intellij.qute.psi.internal.template.resolvedtype.ResolvedJavaTypeFactoryRegistry$ResolvedJavaTypeFactoryBean">
      <with attribute="implementationClass" implements="com.redhat.devtools.intellij.qute.psi.internal.template.resolvedtype.IResolvedJavaTypeFactory"/>
    </extensionPoint>
  </extensionPoints>

  <extensions defaultExtensionNs="com.redhat.devtools.intellij.quarkus">
    <!--LSP4MP-->
    <propertiesProvider implementation="com.redhat.devtools.intellij.lsp4mp4ij.psi.internal.config.properties.MicroProfileConfigPropertyProvider"/>
    <propertiesProvider implementation="com.redhat.devtools.intellij.lsp4mp4ij.psi.internal.config.properties.MicroProfileConfigPropertiesProvider"/>
    <propertiesProvider implementation="com.redhat.devtools.intellij.lsp4mp4ij.psi.internal.restclient.properties.MicroProfileRegisterRestClientProvider"/>
    <propertiesProvider implementation="com.redhat.devtools.intellij.lsp4mp4ij.psi.internal.faulttolerance.properties.MicroProfileFaultToleranceProvider"/>
    <staticPropertyProvider resource="/static-properties/mp-context-propagation-metadata.json" type="org.eclipse.microprofile.context.ThreadContext"/>
    <staticPropertyProvider resource="/static-properties/mp-lra-metadata.json" type="org.eclipse.microprofile.lra.annotation.ws.rs.LRA"/>
    <staticPropertyProvider resource="/static-properties/mp-metrics-metadata.json" type="org.eclipse.microprofile.metrics.MetricID"/>
    <staticPropertyProvider resource="/static-properties/mp-openapi-metadata.json" type="org.eclipse.microprofile.openapi.OASConfig"/>
    <staticPropertyProvider resource="/static-properties/mp-opentracing-metadata.json" type="org.eclipse.microprofile.opentracing.Traced"/>
    <propertiesProvider implementation="com.redhat.devtools.intellij.lsp4mp4ij.psi.internal.reactivemessaging.properties.MicroProfileReactiveMessagingProvider"/>
    <staticPropertyProvider resource="/static-properties/mp-graphql-metadata.json" type="org.eclipse.microprofile.graphql.Name"/>
    <staticPropertyProvider resource="/static-properties/mp-health-metadata.json" type="org.eclipse.microprofile.health.Liveness"/>
    <staticPropertyProvider resource="/static-properties/mp-jwt-metadata.json" type="org.eclipse.microprofile.jwt.Claim"/>
    <staticPropertyProvider resource="/static-properties/jul-metadata.json"/>
    <propertiesProvider implementation="com.redhat.devtools.intellij.lsp4mp4ij.psi.internal.jul.properties.JBossLogManagerPropertyProvider"/>

    <javaHoverParticipant implementation="com.redhat.devtools.intellij.lsp4mp4ij.psi.internal.config.java.MicroProfileConfigHoverParticipant"/>

    <javaDiagnosticsParticipant implementation="com.redhat.devtools.intellij.lsp4mp4ij.psi.internal.core.java.validators.JavaASTDiagnosticsParticipant"/>
    <javaDiagnosticsParticipant implementation="com.redhat.devtools.intellij.lsp4mp4ij.psi.internal.health.java.MicroProfileHealthDiagnosticsParticipant"/>
    <javaDiagnosticsParticipant implementation="com.redhat.devtools.intellij.lsp4mp4ij.psi.internal.restclient.java.MicroProfileRestClientDiagnosticsParticipant"/>
    <javaDiagnosticsParticipant implementation="com.redhat.devtools.intellij.lsp4mp4ij.psi.internal.metrics.java.MicroProfileMetricsDiagnosticsParticipant"/>
    <javaDiagnosticsParticipant implementation="com.redhat.devtools.intellij.quarkus.psi.internal.validators.QuarkusBuildItemDiagnosticsParticipant"/>

    <projectLabelProvider implementation="com.redhat.devtools.intellij.lsp4mp4ij.psi.internal.core.providers.MicroProfileProjectLabelProvider"/>

    <javaDefinitionParticipant implementation="com.redhat.devtools.intellij.lsp4mp4ij.psi.internal.config.java.MicroProfileConfigDefinitionParticipant"/>
    <javaDefinitionParticipant implementation="com.redhat.devtools.intellij.lsp4mp4ij.psi.internal.faulttolerance.java.MicroProfileFaultToleranceDefinitionParticipant"/>

    <javaCompletionParticipant implementation="com.redhat.devtools.intellij.lsp4mp4ij.psi.internal.faulttolerance.java.MicroProfileFaultToleranceCompletionParticipant"/>

    <javaCodeLensParticipant implementation="com.redhat.devtools.intellij.lsp4mp4ij.psi.internal.jaxrs.java.JaxRsCodeLensParticipant"/>
    <javaCodeLensParticipant implementation="com.redhat.devtools.intellij.lsp4mp4ij.psi.internal.restclient.java.MicroProfileRestClientCodeLensParticipant"/>

    <javaCodeActionParticipant kind="quickfix"
                               targetDiagnostic="microprofile-config#NO_VALUE_ASSIGNED_TO_PROPERTY"
                               implementationClass="com.redhat.devtools.intellij.lsp4mp4ij.psi.internal.config.java.NoValueAssignedToPropertyQuickFix"/>
    <javaCodeActionParticipant kind="quickfix"
                               targetDiagnostic="microprofile-config#NO_VALUE_ASSIGNED_TO_PROPERTY"
                               implementationClass="com.redhat.devtools.intellij.lsp4mp4ij.psi.internal.config.java.InsertDefaultValueAnnotationAttributeQuickFix"/>
    <javaCodeActionParticipant kind="quickfix"
                               targetDiagnostic="microprofile-health#ImplementHealthCheck"
                               implementationClass="com.redhat.devtools.intellij.lsp4mp4ij.psi.internal.health.java.ImplementHealthCheckQuickFix"/>
    <javaCodeActionParticipant kind="quickfix"
                               targetDiagnostic="microprofile-health#HealthAnnotationMissing"
                               implementationClass="com.redhat.devtools.intellij.lsp4mp4ij.psi.internal.health.java.HealthAnnotationMissingQuickFix"/>
    <javaCodeActionParticipant kind="quickfix"
                               targetDiagnostic="microprofile-metrics#ApplicationScopedAnnotationMissing"
                               implementationClass="com.redhat.devtools.intellij.lsp4mp4ij.psi.internal.metrics.java.ApplicationScopedAnnotationMissingQuickFix"/>
    <javaCodeActionParticipant kind="quickfix"
                               targetDiagnostic="microprofile-restclient#InjectAnnotationMissing"
                               implementationClass="com.redhat.devtools.intellij.lsp4mp4ij.psi.internal.restclient.java.InjectAnnotationMissingQuickFix"/>
    <javaCodeActionParticipant kind="quickfix"
                               targetDiagnostic="microprofile-restclient#RestClientAnnotationMissing"
                               implementationClass="com.redhat.devtools.intellij.lsp4mp4ij.psi.internal.restclient.java.RestClientAnnotationMissingQuickFix"/>
    <javaCodeActionParticipant kind="quickfix"
                               targetDiagnostic="microprofile-restclient#InjectAndRestClientAnnotationMissing"
                               implementationClass="com.redhat.devtools.intellij.lsp4mp4ij.psi.internal.restclient.java.InjectAndRestClientAnnotationMissingQuickFix"/>
    <javaCodeActionParticipant kind="quickfix"
                               targetDiagnostic="microprofile-restclient#RegisterRestClientAnnotationMissing"
                               implementationClass="com.redhat.devtools.intellij.lsp4mp4ij.psi.internal.restclient.java.RegisterRestClientAnnotationMissingQuickFix"/>
    <javaCodeActionParticipant kind="source"
                               implementationClass="com.redhat.devtools.intellij.lsp4mp4ij.psi.internal.openapi.java.MicroProfileGenerateOpenAPIOperation"/>

    <!-- Microprofile Config Static Property support -->
    <staticPropertyProvider resource="/static-properties/mp-config-metadata.json" type="org.eclipse.microprofile.config.Config"/>

    <!--quarkus-ls-->
    <configSourceProvider implementation="com.redhat.devtools.intellij.quarkus.psi.internal.providers.QuarkusConfigSourceProvider"/>
    <projectLabelProvider implementation="com.redhat.microprofile.psi.internal.quarkus.providers.QuarkusProjectLabelProvider"/>
    <jaxRsInfoProvider
            implementation="com.redhat.microprofile.psi.internal.quarkus.renarde.java.RenardeJaxRsInfoProvider" />
    <jaxRsInfoProvider
            implementation="com.redhat.microprofile.psi.internal.quarkus.route.java.ReactiveRouteJaxRsInfoProvider" />

    <!-- Quarkus Core support -->
    <propertiesProvider implementation="com.redhat.microprofile.psi.internal.quarkus.core.properties.QuarkusCoreProvider"/>
    <propertiesProvider implementation="com.redhat.microprofile.psi.internal.quarkus.core.properties.QuarkusConfigRootProvider"/>
    <propertiesProvider implementation="com.redhat.microprofile.psi.internal.quarkus.core.properties.QuarkusConfigPropertiesProvider"/>
    <propertiesProvider implementation="com.redhat.microprofile.psi.internal.quarkus.core.properties.QuarkusConfigMappingProvider"/>

    <javaASTValidator.validator implementation="com.redhat.microprofile.psi.internal.quarkus.core.java.QuarkusConfigMappingASTVisitor"/>

    <!-- Quarkus JAX-RS support -->
    <javaCodeLensParticipant implementation="com.redhat.microprofile.psi.internal.quarkus.jaxrs.java.QuarkusJaxRsCodeLensParticipant"/>

    <!-- Quarkus @Scheduled annotation support -->
    <javaDefinitionParticipant implementation="com.redhat.microprofile.psi.internal.quarkus.scheduler.java.QuarkusScheduledDefinitionParticipant"/>
    <javaHoverParticipant implementation="com.redhat.microprofile.psi.internal.quarkus.scheduler.java.QuarkusScheduledHoverParticipant"/>
    <propertiesProvider implementation="com.redhat.microprofile.psi.internal.quarkus.scheduler.properties.QuarkusScheduledPropertiesProvider"/>

    <!-- Quarkus Kubernetes support -->
    <propertiesProvider implementation="com.redhat.microprofile.psi.internal.quarkus.kubernetes.properties.QuarkusKubernetesProvider"/>

    <!-- Quarkus Hibernate support -->
    <propertiesProvider implementation="com.redhat.microprofile.psi.internal.quarkus.hibernate.properties.QuarkusHibernateORMProvider"/>

    <!-- Quarkus Cache support -->
    <propertiesProvider implementation="com.redhat.microprofile.psi.internal.quarkus.cache.properties.QuarkusCacheResultProvider"/>

    <!-- Quarkus Scheduled annotation -->
    <javaASTValidator.validator implementation="com.redhat.microprofile.psi.internal.quarkus.scheduler.java.QuarkusSchedulerASTVisitor"/>
    <javaASTValidator.annotationValidator annotation="io.quarkus.scheduler.Scheduled" source="quarkus">
      <attribute name="delay" range="0" /> <!-- x >=0 -->
    </javaASTValidator.annotationValidator>

    <configSourceProvider implementation="com.redhat.devtools.intellij.lsp4mp4ij.psi.internal.core.providers.MicroProfileConfigSourceProvider"/>

    <javaASTValidator.validator implementation="com.redhat.devtools.intellij.lsp4mp4ij.psi.internal.config.java.MicroProfileConfigASTValidator"/>
    <javaASTValidator.validator implementation="com.redhat.devtools.intellij.lsp4mp4ij.psi.internal.faulttolerance.java.MicroProfileFaultToleranceASTValidator"/>
    <javaASTValidator.validator implementation="com.redhat.devtools.intellij.lsp4mp4ij.psi.internal.graphql.java.MicroProfileGraphQLASTValidator"/>

    <javaASTValidator.annotationValidator annotation="org.eclipse.microprofile.faulttolerance.CircuitBreaker" source="microprofile-faulttolerance">
      <attribute name="delay" range="0"/>
      <attribute name="requestVolumeThreshold" range="1"/>
      <attribute name="failureRatio" range="[0,1]"/>
      <attribute name="successThreshold" range="1"/>
    </javaASTValidator.annotationValidator>
    <javaASTValidator.annotationValidator annotation="org.eclipse.microprofile.faulttolerance.Bulkhead"
                       	       source="microprofile-faulttolerance" >
      <attribute name="value" range="0" /> <!-- x >=0 -->
      <attribute name="waitingTaskQueue" range="0" /> <!-- x >=0 -->
    </javaASTValidator.annotationValidator>
    <javaASTValidator.annotationValidator annotation="org.eclipse.microprofile.faulttolerance.Timeout"
                              source="microprofile-faulttolerance" >
      <attribute name="value" range="0" /> <!-- x >=0 -->
    </javaASTValidator.annotationValidator>
    <javaASTValidator.annotationValidator annotation="org.eclipse.microprofile.faulttolerance.Retry"
                               source="microprofile-faulttolerance" >
             <attribute name="delay" range="0" /> <!-- x >=0 -->
             <attribute name="maxDuration" range="0" /> <!-- x >=0 -->
             <attribute name="jitter" range="0" /> <!-- x >=0 -->
             <attribute name="maxRetries" range="-1" /> <!-- x >=0 -->
    </javaASTValidator.annotationValidator>
    <javaASTValidator.validator implementation="com.redhat.devtools.intellij.lsp4mp4ij.psi.internal.reactivemessaging.java.MicroProfileReactiveMessagingASTValidator"/>

    <!-- Qute -->
    <qute.dataModelProvider implementationClass="com.redhat.devtools.intellij.qute.psi.internal.template.datamodel.CheckedTemplateSupport"/>
    <qute.dataModelProvider implementationClass="com.redhat.devtools.intellij.qute.psi.internal.template.datamodel.TemplateExtensionAnnotationSupport"/>
    <qute.dataModelProvider implementationClass="com.redhat.devtools.intellij.qute.psi.internal.template.datamodel.TemplateFieldSupport"/>
    <qute.dataModelProvider implementationClass="com.redhat.devtools.intellij.qute.psi.internal.template.datamodel.TemplateDataAnnotationSupport"/>
    <qute.dataModelProvider implementationClass="com.redhat.devtools.intellij.qute.psi.internal.template.datamodel.TemplateEnumAnnotationSupport"/>
    <qute.dataModelProvider implementationClass="com.redhat.devtools.intellij.qute.psi.internal.template.datamodel.TemplateGlobalAnnotationSupport"/>
    <qute.dataModelProvider implementationClass="com.redhat.devtools.intellij.qute.psi.internal.template.datamodel.TypeSafeMessageBundlesSupport"/>

    <qute.dataModelProvider namespaces="inject,cdi"
                            description="A CDI bean annotated with `@Named` can be referenced in any template through `cdi` and/or `inject` namespaces."
                            url="https://quarkus.io/guides/qute-reference#injecting-beans-directly-in-templates"
                            implementationClass="com.redhat.devtools.intellij.qute.psi.internal.extensions.quarkus.InjectNamespaceResolverSupport"/>

    <!-- Data model providers for Quarkus Renarde -->
    <qute.dataModelProvider namespaces="uri,uriabs"
                            description="In order to generate the URI to an endpoint, in a Qute view, you can use the `uri` and `uriabs` namespace with a call to the endpoint you want to point to."
                            url="https://github.com/quarkiverse/quarkus-renarde/blob/main/docs/modules/ROOT/pages/index.adoc#obtaining-a-uri-in-qute-views"
                            implementationClass="com.redhat.devtools.intellij.qute.psi.internal.extensions.renarde.UriNamespaceResolverSupport" />

    <!-- Resolved Java Type Factories for Quarkus Renarde -->
    <qute.resolvedJavaTypeFactories implementationClass="com.redhat.devtools.intellij.qute.psi.internal.extensions.renarde.RenardeResolvedJavaTypeFactory" />
  </extensions>

  <application-components>
  </application-components>
  <module-components>
    <component>
      <implementation-class>com.redhat.devtools.intellij.quarkus.search.QuarkusModuleComponent</implementation-class>
    </component>
  </module-components>

  <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="/META-INF/lsp4ij-quarkus.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="/META-INF/lsp4ij-qute.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <actions>
    <action id="microprofile.command.open.uri"
            class="com.redhat.devtools.intellij.lsp4mp4ij.psi.core.command.MicroprofileOpenURIAction"
            text="MicroprofileOpenURIAction"/>
    <action id="microprofile.command.configuration.update"
            class="com.redhat.devtools.intellij.lsp4mp4ij.psi.core.command.MicroprofileUpdateConfigurationAction"
            text="MicroprofileUpdateConfigurationAction"/>
    <action id="qute.command.open.uri"
            class="com.redhat.devtools.intellij.qute.psi.core.command.QuteOpenURIAction"/>
    <action id="qute.command.generate.template.file"
            class="com.redhat.devtools.intellij.qute.psi.core.command.QuteGenerateTemplateAction"/>
    <action id="qute.command.java.definition"
            class="com.redhat.devtools.intellij.qute.psi.core.command.QuteJavaDefinitionAction"/>
    <action id="qute.command.configuration.update"
            class="com.redhat.devtools.intellij.qute.psi.core.command.QuteUpdateConfigurationAction"/>

  </actions>
</idea-plugin>
